{"version":3,"sources":["../src/index.js"],"names":["express","require","app","server","Server","io","port","process","env","PORT","use","static","get","req","res","sendFile","__dirname","playerCount","currentGame","on","socket","console","log","sockets","emit","data","id","input","value","i","charAt","j","guesses","listen"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,MAAMF,SAAV;AACA,IAAIG,SAASF,QAAQ,MAAR,EAAgBG,MAAhB,CAAuBF,GAAvB,CAAb;AACA,IAAIG,KAAKJ,QAAQ,WAAR,EAAqBE,MAArB,CAAT;AACA,IAAIG,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B;;AAEAP,IAAIQ,GAAJ,CAAQV,QAAQW,MAAR,CAAe,YAAf,CAAR;;AAEAT,IAAIU,GAAJ,CAAQ,GAAR,EAAa,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/BA,MAAIC,QAAJ,CAAaC,YAAY,oBAAzB;AACD,CAFD;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIC,cAAc,CAAlB;AACA,IAAIC,WAAJ;;AAEAb,GAAGc,EAAH,CAAM,YAAN,EAAoB,UAAUC,MAAV,EAAkB;AACpCC,UAAQC,GAAR,CAAY,YAAZ;AACAL;AACAI,UAAQC,GAAR,CAAYL,WAAZ;AACAZ,KAAGkB,OAAH,CAAWC,IAAX,CAAgB,YAAhB,EAA8BP,WAA9B;AACF;AACEG,SAAOD,EAAP,CAAU,UAAV,EAAsB,UAAUM,IAAV,EAAgB;AACtC;AACEP,kBAAcO,IAAd;AACD,GAHD;AAIA;AACA;AACA;AACAL,SAAOI,IAAP,CAAY,eAAZ,EAA6BN,WAA7B;AACA;AACA;AACA;AACAE,SAAOD,EAAP,CAAU,OAAV,EAAmB,UAASO,EAAT,EAAa;AAC9BrB,OAAGkB,OAAH,CAAWC,IAAX,CAAgB,OAAhB,EAAyBE,EAAzB;AACD,GAFD;AAGAN,SAAOD,EAAP,CAAU,MAAV,EAAkB,UAASO,EAAT,EAAa;AAC7BrB,OAAGkB,OAAH,CAAWC,IAAX,CAAgB,MAAhB,EAAwBE,EAAxB;AACD,GAFD;AAGAN,SAAOD,EAAP,CAAU,OAAV,EAAmB,UAASQ,KAAT,EAAgB;AACjCN,YAAQC,GAAR,CAAYK,MAAMD,EAAlB;AACAL,YAAQC,GAAR,CAAYK,MAAMC,KAAlB;AACA,QAAIC,IAAIF,MAAMD,EAAN,CAASI,MAAT,CAAgB,CAAhB,CAAR;AACA,QAAIC,IAAIJ,MAAMD,EAAN,CAASI,MAAT,CAAgB,CAAhB,CAAR;AACAZ,gBAAYc,OAAZ,CAAoBH,CAApB,EAAuBE,CAAvB,IAA4BJ,MAAMC,KAAlC;AACAP,YAAQC,GAAR,CAAYJ,YAAYc,OAAxB;AACA3B,OAAGkB,OAAH,CAAWC,IAAX,CAAgB,OAAhB,EAAyBG,KAAzB;AACD,GARD;AASAP,SAAOD,EAAP,CAAU,YAAV,EAAwB,YAAY;AAClCF;AACAI,YAAQC,GAAR,CAAYL,WAAZ;AACAZ,OAAGmB,IAAH,CAAQ,qBAAR,EAA+BP,WAA/B;AACD,GAJD;AAKD,CArCD;;AAuCAd,OAAO8B,MAAP,CAAc3B,IAAd,EAAoB,YAAW;AAC7Be,UAAQC,GAAR,CAAY,kBAAkBhB,IAA9B;AACD,CAFD","file":"index.js","sourcesContent":["var express = require('express');\r\nvar app = express();\r\nvar server = require('http').Server(app);\r\nvar io = require('socket.io')(server);\r\nvar port = process.env.PORT || 3000;\r\n\r\napp.use(express.static('src/client'));\r\n\r\napp.get('/', function (req, res) {\r\n  res.sendFile(__dirname + '/client/index.html');\r\n});\r\n\r\n// app.get('/style.css', function(req, res) {\r\n//   res.sendFile(__dirname + \"/\" + \"style.css\");\r\n// });\r\n\r\n// app.get('/script.js', function(req, res) {\r\n//   res.sendFile(__dirname + \"/\" + \"script.js\");\r\n// });\r\n\r\nvar playerCount = 0;\r\nvar currentGame;\r\n\r\nio.on('connection', function (socket) {\r\n  console.log('new player');\r\n  playerCount++;\r\n  console.log(playerCount);\r\n  io.sockets.emit('new player', playerCount);\r\n//  socket.emit('game', { game: 'world' });\r\n  socket.on('new game', function (data) {\r\n  //  io.sockets.emit('existing game', data);\r\n    currentGame = data;\r\n  });\r\n  // socket.on('existing game', function (game) {\r\n  //   io.emit('existing game', game);\r\n  // })\r\n  socket.emit('existing game', currentGame);\r\n  // socket.on('my other event', function (data) {\r\n  //   console.log(data);\r\n  // });\r\n  socket.on('focus', function(id) {\r\n    io.sockets.emit('focus', id);\r\n  });\r\n  socket.on('blur', function(id) {\r\n    io.sockets.emit('blur', id);\r\n  });\r\n  socket.on('input', function(input) {\r\n    console.log(input.id);\r\n    console.log(input.value);\r\n    var i = input.id.charAt(5);\r\n    var j = input.id.charAt(6);\r\n    currentGame.guesses[i][j] = input.value;\r\n    console.log(currentGame.guesses);\r\n    io.sockets.emit('input', input);\r\n  });\r\n  socket.on('disconnect', function () {\r\n    playerCount--;\r\n    console.log(playerCount);\r\n    io.emit('player disconnected', playerCount);\r\n  });\r\n});\r\n\r\nserver.listen(port, function() {\r\n  console.log('listening on ' + port);\r\n});"]}